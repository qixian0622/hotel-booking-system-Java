/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel.booking.system;
import static hotel.booking.system.StaffManageRoom.jTableManageRoom;
import static hotel.booking.system.manageBooking.jTableManageBooking;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.io.*;

import java.util.*;

/**
 *
 * @author qi xian
 */
public class staffchangeroomupdatebookingday extends javax.swing.JFrame {

    /**
     * Creates new form staffchangeroomupdatebookingday
     */
    public staffchangeroomupdatebookingday() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        lblSelectDay30 = new javax.swing.JLabel();
        btnUpdateBooking = new javax.swing.JButton();
        txtduration = new javax.swing.JTextField();
        lblSelectDay31 = new javax.swing.JLabel();
        lblSelectDay32 = new javax.swing.JLabel();
        lblSelectDay50 = new javax.swing.JLabel();
        txtcheckinday = new javax.swing.JTextField();
        txtCheckOutDay = new javax.swing.JTextField();
        txtselectedroom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        lblSelectDay30.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        lblSelectDay30.setText("Duraton (day):");

        btnUpdateBooking.setFont(new java.awt.Font("Segoe UI Black", 0, 16)); // NOI18N
        btnUpdateBooking.setText("Update");
        btnUpdateBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookingActionPerformed(evt);
            }
        });

        txtduration.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtduration.setEnabled(false);
        txtduration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdurationActionPerformed(evt);
            }
        });

        lblSelectDay31.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        lblSelectDay31.setText("Check Out Day:");

        lblSelectDay32.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        lblSelectDay32.setText("Selected Room:");

        lblSelectDay50.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        lblSelectDay50.setText("Check In Day:");

        txtcheckinday.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtcheckinday.setEnabled(false);
        txtcheckinday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcheckindayActionPerformed(evt);
            }
        });

        txtCheckOutDay.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtCheckOutDay.setEnabled(false);
        txtCheckOutDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheckOutDayActionPerformed(evt);
            }
        });

        txtselectedroom.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtselectedroom.setEnabled(false);
        txtselectedroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtselectedroomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelectDay30)
                            .addComponent(lblSelectDay31)
                            .addComponent(lblSelectDay32)
                            .addComponent(lblSelectDay50))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtcheckinday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtselectedroom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtduration, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                                .addComponent(txtCheckOutDay, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(btnUpdateBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcheckinday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelectDay50, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelectDay30, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtduration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCheckOutDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelectDay31, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtselectedroom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelectDay32, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnUpdateBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookingActionPerformed
         if ((txtcheckinday.getText().equals("") || txtduration.getText().equals("") || txtCheckOutDay.getText().equals("")  || txtselectedroom.getText().equals("") ) ) {
            JOptionPane.showMessageDialog(null, "Please Fill Up All Field!");}else{
        
        
        
        DefaultTableModel model = (DefaultTableModel)jTableManageBooking.getModel();
        int selectedRowIndex = jTableManageBooking.getSelectedRow();

        String duration = txtduration.getText();
        int durationInt = Integer.parseInt(duration);
        
        String selectedRoom = staffupdatebookingchangeroom.cmbSelectAvailableRoom.getSelectedItem().toString();
        String [] selected_room_data = selectedRoom.split(";");
        
        //use payment to creatte object , as payment is child of booking, hence we can access its parent booking's method as well as its own method, such as UpdateRoomStatusForBookedDay below
        payment obj = new payment(durationInt);

        String bookingID = model.getValueAt(selectedRowIndex, 0).toString();

        String customerName = model.getValueAt(selectedRowIndex, 1).toString();

        String icpassport = model.getValueAt(selectedRowIndex, 2).toString();
        String contactno = model.getValueAt(selectedRowIndex, 3).toString();
        String email = model.getValueAt(selectedRowIndex, 4).toString();
        
        
       

        String checkinday = txtcheckinday.getText();
        String checkoutday= txtCheckOutDay.getText();
        String selectedroommm= txtselectedroom.getText();
        
        String floorLevel = selected_room_data[2];
        int floorLevellengthh = floorLevel.length();
        String floorLevelCompleted = floorLevel.substring(12,floorLevellengthh-1);
        int floorlevleintt = Integer.parseInt(floorLevelCompleted);
        
        String roomnumberqqq = selected_room_data[0];
        int roomnumberqqqlengthh = roomnumberqqq.length();
        String roomnumberqqqCompleted = roomnumberqqq.substring(9, roomnumberqqqlengthh-1);
        int roomnumberqqqint = Integer.parseInt(roomnumberqqqCompleted);
        
        String roomtypezz = selected_room_data[1];
        int roomtypezzlength = roomtypezz.length();
        String roomTypezzCompleted = roomtypezz.substring(7,roomtypezzlength);
        
        String roomiddddd = selected_room_data[3];
        int roomidddddLength = roomiddddd.length();
        String roomidddddCompleted = roomiddddd.substring(5,roomidddddLength);

        obj.UpdateBookingRecord(bookingID , customerName, icpassport, contactno, email, checkinday, checkoutday,  selectedroommm, false);
        
         
         obj.UpdateRoomStatusForBookedDay(checkinday, durationInt, roomidddddCompleted, roomnumberqqqint,  roomTypezzCompleted, floorlevleintt);
         
        
         
        this.dispose();
        
        
        
           
        //refresh jtable
        model.setRowCount(0);
        String filePath = "C:\\Users\\qi xian\\Documents\\NetBeansProjects\\HOTEL BOOKING SYSTEM\\booking.txt";
        File file = new File(filePath);
        jTableManageBooking.setRowHeight(30);
         jTableManageBooking.getTableHeader().setFont(new Font("SansSerif", Font.ITALIC, 16));
        
        
        try{
            BufferedReader br = new BufferedReader(new FileReader(file));
            
            Object[] tableLines = br.lines().toArray();
            
            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                int index1 = line.indexOf(',');
                String[] dataRow = line.split(",");
                
                String bookingId = dataRow[0];
                int bookingIdLength = bookingId.length();
                String bookingIdComplete = bookingId.substring(13,bookingIdLength);
                dataRow[0] = bookingIdComplete;
                
                
                
                
                String durationkk = dataRow[6];
                int durationkkLength = durationkk.length();
                String durationkkComplete = durationkk.substring(11,durationkkLength);
                dataRow[6] = durationkkComplete;
                
                String checkindaykk = dataRow[7];
                int checkindaykkLength = checkindaykk.length();
                String checkindaykkComplete = checkindaykk.substring(15,checkindaykkLength);
                dataRow[7] = checkindaykkComplete;
                
                String checkoutdaykk = dataRow[8];
                int checkoutdaykkLength = checkoutdaykk.length();
                String checkoutdaykkComplete = checkoutdaykk.substring(16,checkoutdaykkLength);
                dataRow[8] = checkoutdaykkComplete;
                
               
                model.addRow(dataRow);
            }
            
            
            
        } catch(FileNotFoundException ex){
            JOptionPane.showMessageDialog(null, ex);
            
        }
         }
    }//GEN-LAST:event_btnUpdateBookingActionPerformed

    private void txtdurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdurationActionPerformed

    private void txtcheckindayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcheckindayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcheckindayActionPerformed

    private void txtCheckOutDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheckOutDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCheckOutDayActionPerformed

    private void txtselectedroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtselectedroomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtselectedroomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staffchangeroomupdatebookingday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staffchangeroomupdatebookingday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staffchangeroomupdatebookingday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staffchangeroomupdatebookingday.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staffchangeroomupdatebookingday().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateBooking;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JLabel lblSelectDay30;
    private javax.swing.JLabel lblSelectDay31;
    private javax.swing.JLabel lblSelectDay32;
    private javax.swing.JLabel lblSelectDay50;
    public static javax.swing.JTextField txtCheckOutDay;
    public static javax.swing.JTextField txtcheckinday;
    public static javax.swing.JTextField txtduration;
    public static javax.swing.JTextField txtselectedroom;
    // End of variables declaration//GEN-END:variables
}
